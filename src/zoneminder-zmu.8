.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "zoneminder-zmu 8"
.TH zoneminder-zmu 8 "2018-04-12" "" "zoneminder"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
zmc \- The ZoneMinder Utility
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& zmu \-d device_path [\-v] [function] [\-U<username> \-P<password>]
\& zmu \-\-device device_path [\-v] [function] [\-U<username> \-P<password>]
\&
\& zmu \-m monitor_id [\-v] [function] [\-U<username> \-P<password>]
\& zmu \-\-monitor monitor_id [\-v] [function] [\-U<username> \-P<password>]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This binary is a handy command line interface to several useful functions. It's
not really meant to be used by anyone except the web page (there's only limited
\&'help' in it so far) but can be if necessary, especially for debugging video
problems.
.SH "OPTIONS"
.IX Header "OPTIONS"
General options:
  \-v, \-\-verbose               \- Produce more verbose output
  \-l, \-\-list                \- List the current status of active (or all with \-v) monitors
  \-h, \-\-help                 \- Display usage information
  \-v, \-\-version              \- Print the installed version of ZoneMinder
.PP
Options for use with devices:
  \-d, \-\-device [device_path]        \- Get the current video device settings for [device_path] or all devices
  \-V, \-\-version <V4L version>       \- Set the Video 4 Linux \s-1API\s0 version to use for the query, use 1 or 2
  \-q, \-\-query               \- Query the current settings for the device
.PP
Options for use with monitors:
  \-m, \-\-monitor <monitor_id>        \- Specify which monitor to address, default 1 if absent
  \-q, \-\-query               \- Query the current settings for the monitor
  \-s, \-\-state               \- Output the current monitor state, 0 = idle, 1 = prealarm, 2 = alarm,
                      3 = alert, 4 = tape
  \-B, \-\-brightness [value]        \- Output the current brightness, set to value if given 
  \-C, \-\-contrast [value]          \- Output the current contrast, set to value if given 
  \-H, \-\-hue [value]             \- Output the current hue, set to value if given 
  \-O, \-\-colour [value]          \- Output the current colour, set to value if given 
  \-i, \-\-image [image_index]         \- Write captured image to disk as <monitor_name>.jpg, last image captured
                      or specified ring buffer index if given.
  \-S, \-\-scale <scale_%%ge>        \- With \-\-image specify any scaling (in %%) to be applied to the image
  \-t, \-\-timestamp [image_index]       \- Output captured image timestamp, last image captured or specified
                      ring buffer index if given
  \-R, \-\-read_index            \- Output ring buffer read index
  \-W, \-\-write_index             \- Output ring buffer write index
  \-e, \-\-event               \- Output last event index
  \-f, \-\-fps                 \- Output last Frames Per Second captured reading
  \-z, \-\-zones               \- Write last captured image overlaid with zones to <monitor_name>\-Zones.jpg
  \-a, \-\-alarm               \- Force alarm in monitor, this will trigger recording until cancelled with \-c
  \-n, \-\-noalarm               \- Force no alarms in monitor, this will prevent alarms until cancelled with \-c
  \-c, \-\-cancel              \- Cancel a forced alarm/noalarm in monitor, required after being enabled with \-a or \-n
  \-L, \-\-reload              \- Signal monitor to reload settings
  \-E, \-\-enable              \- Enable detection, wake monitor up
  \-D, \-\-disable               \- Disable detection, put monitor to sleep
  \-u, \-\-suspend               \- Suspend detection, useful to prevent bogus alarms when panning etc
  \-r, \-\-resume              \- Resume detection after a suspend
  \-U, \-\-username <username>         \- When running in authenticated mode the username and
  \-P, \-\-password <password>         \- password combination of the given user
  \-A, \-\-auth <authentication>       \- Pass authentication hash string instead of user details
